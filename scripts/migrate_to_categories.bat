@echo off
setlocal enabledelayedexpansion

:: Enable ANSI escape sequences for color support
for /f %%a in ('echo prompt $E ^| cmd') do set "ESC=%%a"

:: Color codes
set "GREEN=%ESC%[92m"
set "YELLOW=%ESC%[93m"
set "CYAN=%ESC%[96m"
set "RESET=%ESC%[0m"

echo %CYAN%Repository Category Migration Tool%RESET%
echo =======================================
echo.
echo This tool helps you migrate from repos.txt to the new categorized format.
echo It will analyze your current repos.txt and suggest categories based on folder names.
echo.

set "input_file=%~dp0..\repos.txt"
set "output_file=%~dp0..\repos_categorized_auto.txt"

if not exist "%input_file%" (
    echo %YELLOW%Warning:%RESET% repos.txt not found in the expected location.
    echo Expected: %input_file%
    echo.
    set /p "input_file=Enter path to your repos.txt file: "
    if not exist "!input_file!" (
        echo Error: File not found. Exiting.
        pause
        exit /b 1
    )
)

echo Reading repositories from: %input_file%
echo Output will be saved to: %output_file%
echo.

:: Create the output file with header
echo # Repository Categories Configuration > "%output_file%"
echo # Auto-generated by category migration tool >> "%output_file%"
echo # Format: [CATEGORY_NAME] followed by repository paths >> "%output_file%"
echo # Empty lines and lines starting with # are ignored >> "%output_file%"
echo. >> "%output_file%"

set "current_category=UNCATEGORIZED"
set "repo_count=0"

for /f "usebackq delims=" %%R in ("%input_file%") do (
    set "line=%%R"
    if not "!line!"=="" (
        set /a repo_count+=1
        
        :: Extract potential category from path
        set "path=!line!"
        call :extract_category "!path!"
        
        if not "!extracted_category!"=="!current_category!" (
            set "current_category=!extracted_category!"
            echo. >> "%output_file%"
            echo [!current_category!] >> "%output_file%"
        )
        
        echo !line! >> "%output_file%"
    ) else (
        :: Empty line - could indicate category break
        echo. >> "%output_file%"
    )
)

echo.
echo %GREEN%Migration completed!%RESET%
echo - Processed: !repo_count! repositories
echo - Output file: %output_file%
echo.
echo %YELLOW%Next steps:%RESET%
echo 1. Review the generated file: %output_file%
echo 2. Edit category names as needed
echo 3. Rename to repos_with_categories.txt when satisfied
echo 4. Use the enhanced script with category support
echo.
pause
exit /b

:: Function to extract category from repository path
:extract_category
set "repo_path=%~1"
set "extracted_category=UNCATEGORIZED"

:: Look for common patterns in the path
echo %repo_path% | findstr /i "\\JELLY\\" >nul && set "extracted_category=JELLYFIN_ECOSYSTEM" && goto :eof
echo %repo_path% | findstr /i "\\HOME_ASSISTANT\\" >nul && set "extracted_category=HOME_ASSISTANT" && goto :eof
echo %repo_path% | findstr /i "\\arr\\" >nul && set "extracted_category=ARR_STACK" && goto :eof
echo %repo_path% | findstr /i "personal_repos" >nul && set "extracted_category=PERSONAL_PROJECTS" && goto :eof

:: Look for specific app names
echo %repo_path% | findstr /i "firefly" >nul && set "extracted_category=FINANCIAL_TOOLS" && goto :eof
echo %repo_path% | findstr /i "immich" >nul && set "extracted_category=PHOTO_MANAGEMENT" && goto :eof
echo %repo_path% | findstr /i "paperless" >nul && set "extracted_category=DOCUMENT_MANAGEMENT" && goto :eof
echo %repo_path% | findstr /i "proxmox" >nul && set "extracted_category=VIRTUALIZATION" && goto :eof
echo %repo_path% | findstr /i "nginx" >nul && set "extracted_category=WEB_SERVICES" && goto :eof
echo %repo_path% | findstr /i "uptime" >nul && set "extracted_category=MONITORING" && goto :eof

:: Development related
echo %repo_path% | findstr /i "flutter\|expo\|flow\.launcher" >nul && set "extracted_category=DEVELOPMENT_TOOLS" && goto :eof

:: Media related
echo %repo_path% | findstr /i "media\|tinyMediaManager\|yt-dlp" >nul && set "extracted_category=MEDIA_TOOLS" && goto :eof

:: Self-hosted apps (default for many)
set "extracted_category=SELF_HOSTED_APPS"

goto :eof
